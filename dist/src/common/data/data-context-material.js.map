{"version":3,"sources":["../../../../src/common/data/data-context-material.ts"],"names":[],"mappings":";;;;;;;;;;AAEA,OAAO,EAAmB,UAAU,EAAC,MAAM,cAAc,CAAC;AAO1D;;GAEG;AACH;IAA4C,uCAAa;IAEvD,6BACU,WAA6B;QADvC,YAEE,iBAAO,SAER;QAHS,iBAAW,GAAX,WAAW,CAAkB;QAErC,EAAE,CAAA,CAAC,CAAC,WAAW,CAAC;YAAC,MAAM,KAAK,CAAC,+BAA+B,CAAC,CAAC;;IAChE,CAAC;IAGM,qCAAO,GAAd,UAAe,gBAAkC;QAC/C,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;IACtC,CAAC;IAEM,wCAAU,GAAjB,UAAkB,gBAAkC;IACpD,CAAC;IAED,sBAAI,qCAAI;aAAR,cAAmB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;aAClD,UAAS,IAAS,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;;;OADH;IAGlD,sBAAI,sCAAK;aAAT,cAAsB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;;;OAAA;IAEtD,sBAAI,sCAAK;aAAT,cAAkC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;;;OAAA;IAElE,sBAAI,wCAAO;aAAX,cAAqC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;;;OAAA;IAEvE,sBAAI,iDAAgB;aAApB,cAAkC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC;;;OAAA;IAE7E,sBAAI,4CAAW;aAAf,cAAsC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC;;;OAAA;IAG5E,mCAAK,GAAL,UAAM,KAAc,EAAE,OAAkB;QACtC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IACzC,CAAC;IAED,yCAAW,GAAX,UAAY,GAAQ;QAClB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAC3C,CAAC;IAED,sBAAI,4CAAW;aAAf;YACI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QACxC,CAAC;;;OAAA;IAED,sCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IAC9B,CAAC;IAEH,0BAAC;AAAD,CA9CA,AA8CC,CA9C2C,UAAU,GA8CrD","file":"data-context-material.js","sourceRoot":"","sourcesContent":["\n\nimport {CollectionViewer, DataSource} from \"@angular/cdk\";\nimport {Observable} from \"rxjs/Observable\";\nimport {IDataContext} from \"./data-context\";\nimport {Filter} from \"./filter\";\nimport {Sort} from \"./page\";\n\n\n/**\n * Adapter for a data-context for the Angular Material DataSource\n */\nexport class MaterialDataContext<T> extends DataSource<T> implements IDataContext<T> {\n\n  constructor(\n    private datacontext : IDataContext<T>){\n    super();\n    if(!datacontext) throw Error('datacontext must not be NULL!');\n  }\n\n\n  public connect(collectionViewer: CollectionViewer): Observable<T[]> {\n    return this.datacontext.rowsChanged;\n  }\n\n  public disconnect(collectionViewer: CollectionViewer): void {\n  }\n\n  get rows() : T[] { return this.datacontext.rows; }\n  set rows(data: T[]) { this.datacontext.rows = data; }\n\n  get total(): number { return this.datacontext.total; }\n\n  get sorts(): Sort[] | undefined { return this.datacontext.sorts; }\n\n  get filters(): Filter[] | undefined {return this.datacontext.filters; }\n\n  get loadingIndicator(): boolean { return this.datacontext.loadingIndicator; }\n\n  get rowsChanged() : Observable<T[]> { return this.datacontext.rowsChanged; }\n\n\n  start(sorts?: Sort[], filters?: Filter[]): void {\n    this.datacontext.start(sorts, filters);\n  }\n\n  findByIndex(key: any): T | undefined {\n    return this.datacontext.findByIndex(key);\n  }\n\n  get hasMoreData() : boolean {\n      return this.datacontext.hasMoreData;\n  }\n\n  loadMore(): void {\n    this.datacontext.loadMore();\n  }\n\n}\n"]}