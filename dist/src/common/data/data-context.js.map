{"version":3,"sources":["../../../../src/common/data/data-context.ts"],"names":[],"mappings":"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","file":"data-context.js","sourceRoot":"","sourcesContent":["\nimport {Filter} from \"./filter\";\nimport {BehaviorSubject} from \"rxjs/BehaviorSubject\";\nimport {Observable} from \"rxjs/Observable\";\nimport {Sort} from \"./page\";\n\n\n/**\n * Manages a set of data (rows) which are to be displayed in a UI Component.\n *\n */\nexport interface IDataContext<T> {\n\n  // Properties\n  rows : T[];\n  readonly total : number;\n  readonly sorts? : Sort[]\n  readonly filters? : Filter[];\n  readonly loadingIndicator : boolean;\n\n\n  readonly hasMoreData : boolean;\n  loadMore() : void;\n\n  // Observable data\n\n  readonly rowsChanged : Observable<T[]>;\n\n  // Public API\n\n  start(sorts? : Sort[], filters? : Filter[]) : void;\n\n  findByIndex(key : any) : T | undefined;\n}\n\n\n\n\nexport class DataContext<T> implements IDataContext<T> {\n\n\n  public total: number = 0;\n  public sorts? : Sort[];\n  public filters? : Filter[];\n  public loadingIndicator : boolean;\n\n\n  private _rows : T[];\n  private _dataChange = new BehaviorSubject<T[]>([]);\n  private _primaryIndex = new Map<any, T>();\n\n  constructor(\n    private listFetcher : (sorts? : Sort[], filters? : Filter[]) => Observable<Array<T>>,\n    private _indexFn? : ((item:T) => any),\n    private _localSort? : ((a: T, b: T) => number)\n  ){\n    this.rows = [];\n    this.sorts = [];\n  }\n\n  public start(sorts? : Sort[], filters? : Filter[]) : void {\n    this.total = 0;\n    this.rows = [];\n    this.sorts = sorts;\n    this.filters = filters;\n    this.loadData();\n  }\n\n  public get hasMoreData(): boolean { return false; }\n\n  public loadMore(): void {\n    // NOP\n  }\n\n  public findByIndex(key : any) : T | undefined {\n    if(!this._indexFn) throw new Error(\"findByIndex requires you to pass a index function!\");\n    return this._primaryIndex.get(key);\n  }\n\n  public get rowsChanged() : Observable<T[]> {\n    return this._dataChange;\n  }\n\n\n  public get rows() : T[]{\n    return this._rows;\n  }\n\n  public set rows(rows : T[]) {\n\n    if(this._localSort){\n      rows.sort(this._localSort)\n    }\n\n    this._rows = rows;\n    console.info('rows changed data-change: ' + this._rows.length);\n    this._dataChange.next(rows);\n  }\n\n  // Private methods\n\n  private updateIndex() : void {\n    this._primaryIndex.clear();\n    this.rows.forEach(item => this.indexItem(item))\n  }\n\n  protected indexItem(item : T) : void{\n    let key = this.getItemKey(item);\n    if(key){\n      this._primaryIndex.set(key, item);\n    }\n  }\n\n  private getItemKey(item : T) : any  {\n    if(this._indexFn){\n      return this._indexFn(item);\n    }\n    return null;\n  }\n\n  private loadData(){\n\n    this.loadingIndicator = true;\n    if(this.listFetcher){\n      this.listFetcher(this.sorts, this.filters)\n        .take(1)\n        .subscribe(\n          list => {\n            this.total = list.length;\n            this.rows = list;\n            this.loadingIndicator = false;\n            console.log('got list data!')\n          }, err => {\n            this.total = 0;\n            this.rows = [];\n            this.loadingIndicator = false;\n            this.updateIndex();\n            console.error('Failed to query data', err);\n          });\n    }else{\n      console.warn('Skipping data context load - no list fetcher present!');\n    }\n\n  }\n}\n"]}