{"version":3,"sources":["../../../../src/components/expand-toggle-button/expand-toggle-button.component.ts"],"names":[],"mappings":"AAGA,OAAO,EAAA,SAAE,EAAU,KAAA,EAAe,MAAA,EAAO,MAAM,eAAA,CAAgB;AAC/D,OAAO,EAAA,eAAE,EAAe,MAAM,sBAAA,CAAuB;AAIrD;IAAA;QAGU,qBAAgB,GAAG,IAAI,eAAe,CAAU,KAAK,CAAC,CAAC;IA0CjE,CAAC;IArCC,8CAAQ,GAAR;IAEA,CAAC;IAGD,sBAAW,wDAAe;aAA1B;YACE,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC;QAC/B,CAAC;;;OAAA;IAED,sBAAW,mDAAU;aAArB;YACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;QAC1B,CAAC;aAGD,UAAsB,KAAe;YACnC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,CAAC;;;OANA;IAQM,oDAAc,GAArB,UAAsB,KAAW;QAC/B,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;IACrC,CAAC;IACI,sCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,sBAAsB;oBAChC,WAAW,EAAE,uCAAuC;oBACpD,SAAS,EAAE,CAAC,uCAAuC,CAAC;iBACrD,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,0CAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACK,0CAAc,GAA2C;QAChE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,MAAM,EAAG,EAAE,EAAE;QAC5C,iBAAiB,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,SAAS,EAAG,EAAE,EAAE;QAC3D,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,UAAU,EAAG,EAAE,EAAE;KACrD,CAAC;IACF,kCAAC;CA7CD,AA6CC,IAAA;SA7CY,2BAA2B","file":"expand-toggle-button.component.js","sourceRoot":"","sourcesContent":["\n\n\nimport {Component, Input, OnInit, Output} from \"@angular/core\";\nimport {BehaviorSubject} from \"rxjs/BehaviorSubject\";\nimport {Observable} from \"rxjs/Observable\";\n\n\nexport class ExpandToggleButtonComponent implements OnInit {\n\n  private _isExpanded : boolean;\n  private _expandedChanged = new BehaviorSubject<boolean>(false);\n\n  \n  public name : string;\n\n  ngOnInit(): void {\n\n  }\n\n  \n  public get expandedChanged() : Observable<boolean> {\n    return this._expandedChanged;\n  }\n\n  public get isExpanded() : boolean {\n    return this._isExpanded;\n  }\n\n  \n  public set isExpanded(value : boolean) {\n    this._isExpanded = value;\n    this._expandedChanged.next(value);\n  }\n\n  public onToggleExpand(event : any){\n    this.isExpanded = !this.isExpanded;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'expand-toggle-button',\n  templateUrl: './expand-toggle-button.component.html',\n  styleUrls: ['./expand-toggle-button.component.scss']\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input, args: ['name', ] },],\n'expandedChanged': [{ type: Output, args: ['changed', ] },],\n'isExpanded': [{ type: Input, args: ['expanded', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}