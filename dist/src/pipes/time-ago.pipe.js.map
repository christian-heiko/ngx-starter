{"version":3,"sources":["../../../src/pipes/time-ago.pipe.ts"],"names":[],"mappings":"AACA,OAAO,EAAA,IAAE,EAAoB,MAAA,EAAQ,iBAAA,EAA6B,MAAM,eAAA,CAAgB;AAGxF;;;GAGG;AAEH;IAEE,qBAAoB,iBAAoC,EAAU,MAAc;QAA5D,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IACpF,+BAAS,GAAT,UAAU,KAAY;QAAtB,iBA6CC;QA5CC,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,EAAE,CAAA,CAAC,CAAC,KAAK,CAAC;YAAC,MAAM,CAAC,cAAc,CAAC;QAEjC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,IAAI,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;QACrB,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC,GAAC,IAAI,CAAC,CAAC,CAAC;QACvE,IAAI,YAAY,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,GAAE,IAAI,CAAC;QAC7D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;YACzC,EAAE,CAAC,CAAC,OAAO,MAAM,KAAK,WAAW,CAAC,CAAC,CAAC;gBAClC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC;oBACvB,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,cAAM,OAAA,KAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,EAArC,CAAqC,CAAC,CAAC;gBAC/D,CAAC,EAAE,YAAY,CAAC,CAAC;YACnB,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;QACH,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC,CAAC;QACjD,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC,CAAC;QAC/C,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC;QAC5C,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,GAAC,MAAM,CAAC,CAAC,CAAC;QAC/C,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,GAAC,GAAG,CAAC,CAAC,CAAC;QAC3C,EAAE,CAAC,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC;YAClB,MAAM,CAAC,mBAAmB,CAAC;QAC7B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC;YACzB,MAAM,CAAC,cAAc,CAAC;QACxB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC;YACzB,MAAM,CAAC,OAAO,GAAG,cAAc,CAAC;QAClC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC;YACzB,MAAM,CAAC,aAAa,CAAC;QACvB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC;YACvB,MAAM,CAAC,KAAK,GAAG,YAAY,CAAC;QAC9B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC;YACvB,MAAM,CAAC,WAAW,CAAC;QACrB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;YACtB,MAAM,CAAC,IAAI,GAAG,WAAW,CAAC;QAC5B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;YACtB,MAAM,CAAC,aAAa,CAAC;QACvB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC;YACvB,MAAM,CAAC,MAAM,GAAG,aAAa,CAAC;QAChC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC;YACvB,MAAM,CAAC,YAAY,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,KAAK,GAAG,YAAY,CAAC;QAC9B,CAAC;IACH,CAAC;IACD,iCAAW,GAAX;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IACO,iCAAW,GAAnB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAChC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC;IACH,CAAC;IACO,2CAAqB,GAA7B,UAA8B,OAAc;QAC1C,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;QAClB,IAAI,GAAG,GAAG,EAAE,GAAG,EAAE,CAAC;QAClB,EAAE,CAAC,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC;YAClB,MAAM,CAAC,CAAC,CAAC;QACX,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC;YACzB,MAAM,CAAC,GAAG,CAAC;QACb,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IACI,sBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;oBACnB,IAAI,EAAC,SAAS;oBACd,IAAI,EAAC,KAAK;iBACX,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,0BAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,iBAAiB,GAAG;QAC3B,EAAC,IAAI,EAAE,MAAM,GAAG;KACf,EAH6F,CAG7F,CAAC;IACF,kBAAC;CAnFD,AAmFC,IAAA;SAnFY,WAAW","file":"time-ago.pipe.js","sourceRoot":"","sourcesContent":["\nimport {Pipe, PipeTransform, NgZone, ChangeDetectorRef, OnDestroy} from \"@angular/core\";\n\n\n/**\n * Source code from\n * https://github.com/AndrewPoyntz/time-ago-pipe\n */\n\nexport class TimeAgoPipe implements PipeTransform, OnDestroy {\n  private timer: number | null;\n  constructor(private changeDetectorRef: ChangeDetectorRef, private ngZone: NgZone) {}\n  transform(value:string) {\n    this.removeTimer();\n\n    if(!value) return 'unknown time';\n\n    let d = new Date(value);\n    let now = new Date();\n    let seconds = Math.round(Math.abs((now.getTime() - d.getTime())/1000));\n    let timeToUpdate = this.getSecondsUntilUpdate(seconds) *1000;\n    this.timer = this.ngZone.runOutsideAngular(() => {\n      if (typeof window !== 'undefined') {\n        return window.setTimeout(() => {\n          this.ngZone.run(() => this.changeDetectorRef.markForCheck());\n        }, timeToUpdate);\n      }\n      return null;\n    });\n    let minutes = Math.round(Math.abs(seconds / 60));\n    let hours = Math.round(Math.abs(minutes / 60));\n    let days = Math.round(Math.abs(hours / 24));\n    let months = Math.round(Math.abs(days/30.416));\n    let years = Math.round(Math.abs(days/365));\n    if (seconds <= 45) {\n      return 'a few seconds ago';\n    } else if (seconds <= 90) {\n      return 'a minute ago';\n    } else if (minutes <= 45) {\n      return minutes + ' minutes ago';\n    } else if (minutes <= 90) {\n      return 'an hour ago';\n    } else if (hours <= 22) {\n      return hours + ' hours ago';\n    } else if (hours <= 36) {\n      return 'a day ago';\n    } else if (days <= 25) {\n      return days + ' days ago';\n    } else if (days <= 45) {\n      return 'a month ago';\n    } else if (days <= 345) {\n      return months + ' months ago';\n    } else if (days <= 545) {\n      return 'a year ago';\n    } else { // (days > 545)\n      return years + ' years ago';\n    }\n  }\n  ngOnDestroy(): void {\n    this.removeTimer();\n  }\n  private removeTimer() {\n    if (this.timer) {\n      window.clearTimeout(this.timer);\n      this.timer = null;\n    }\n  }\n  private getSecondsUntilUpdate(seconds:number) {\n    let min = 60;\n    let hr = min * 60;\n    let day = hr * 24;\n    if (seconds < min) { // less than 1 min, update ever 2 secs\n      return 2;\n    } else if (seconds < hr) { // less than an hour, update every 30 secs\n      return 30;\n    } else if (seconds < day) { // less then a day, update every 5 mins\n      return 300;\n    } else { // update every hour\n      return 3600;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name:'timeAgo',\n  pure:false\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n{type: NgZone, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}