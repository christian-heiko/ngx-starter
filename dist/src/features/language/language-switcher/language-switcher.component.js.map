{"version":3,"sources":["../../../../../src/features/language/language-switcher/language-switcher.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,SAAE,EAAU,KAAA,EAAc,MAAM,eAAA,CAAgB;AACvD,OAAO,EAAA,eAAE,EAAe,MAAM,qBAAA,CAAsB;AAGpD;IAEI;;;;gFAI4E;IAE5E,mCACW,QAAyB;QAAzB,aAAQ,GAAR,QAAQ,CAAiB;IAEnC,CAAC;IAWF,sBAAW,sDAAe;aAA1B;YACI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC;QACzC,CAAC;aAED,UAA2B,IAAa;YACpC,IAAI,CAAC,QAAQ,CAAC,eAAe,GAAG,IAAI,CAAC;QACzC,CAAC;;;OAJA;IAMD,sBAAW,gDAAS;aAApB;YACI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;QACnC,CAAC;;;OAAA;IAEM,+CAAW,GAAlB,UAAmB,IAAY;QAC3B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;IAChC,CAAC;IAED;;;;gFAI4E;IAE5E,4CAAQ,GAAR;IACA,CAAC;IAED;;;;gFAI4E;IAErE,oDAAgB,GAAvB,UAAwB,IAAY;QAChC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IAChD,CAAC;IAEE,oCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACtB,QAAQ,EAAE,uBAAuB;oBACjC,WAAW,EAAE,oCAAoC;oBACjD,SAAS,EAAE,CAAC,oCAAoC,CAAC;iBACpD,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,wCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,eAAe,GAAG;KACxB,EAF6F,CAE7F,CAAC;IACK,wCAAc,GAA2C;QAChE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,UAAU,EAAG,EAAE,EAAE;KACnD,CAAC;IACF,gCAAC;CAvED,AAuEC,IAAA;SAvEY,yBAAyB","file":"language-switcher.component.js","sourceRoot":"","sourcesContent":["import {Component, Input, OnInit} from '@angular/core';\nimport {LanguageService} from \"../language.service\";\n\n\nexport class LanguageSwitcherComponent implements OnInit {\n\n    /***************************************************************************\n     *                                                                         *\n     * Constructors                                                            *\n     *                                                                         *\n     **************************************************************************/\n\n    constructor(\n        public language: LanguageService\n    )\n    {}\n\n    /***************************************************************************\n     *                                                                         *\n     * Properties                                                              *\n     *                                                                         *\n     **************************************************************************/\n\n    \n    public slimMode: boolean;\n\n    public get currentLanguage() : string {\n        return this.language.currentLanguage;\n    }\n\n    public set currentLanguage(lang : string) {\n        this.language.currentLanguage = lang;\n    }\n\n    public get languages() : Array<string> {\n        return this.language.languages;\n    }\n\n    public setLanguage(lang: string){\n        this.currentLanguage = lang;\n    }\n\n    /***************************************************************************\n     *                                                                         *\n     * Lifecycle Hooks                                                         *\n     *                                                                         *\n     **************************************************************************/\n\n    ngOnInit() {\n    }\n\n    /***************************************************************************\n     *                                                                         *\n     * Public API                                                              *\n     *                                                                         *\n     **************************************************************************/\n\n    public isLanguageActive(lang: string) : boolean {\n        return this.language.isLanguageActive(lang);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'app-language-switcher',\n    templateUrl: './language-switcher.component.html',\n    styleUrls: ['./language-switcher.component.scss']\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LanguageService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'slimMode': [{ type: Input, args: ['slimMode', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}