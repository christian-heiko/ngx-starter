{"version":3,"sources":["../../../../src/features/breadcrumbs/breadcrumb.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAkB,MAAO,eAAA,CAAgB;AAClD,OAAO,EAAA,MAAE,EAAO,aAAA,EAAe,cAAA,EAAe,MAAM,iBAAA,CAAkB;AACtE,OAAO,EAAA,iBAAE,EAA8B,MAAM,sBAAA,CAAuB;AAMpE;IAKE;;;OAGG;IACH,6BACU,iBAAqC,EACrC,MAAc,EACd,KAAqB;QAFrB,sBAAiB,GAAjB,iBAAiB,CAAoB;QACrC,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QAVvB,0BAAqB,GAAW,YAAY,CAAC;QAanD,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IACxB,CAAC;IAED;;;;;OAKG;IACH,sCAAQ,GAAR;QAAA,iBAYC;QAXC,sCAAsC;QACtC,IAAI,CAAC,MAAM,CAAC,MAAM;aACf,MAAM,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,YAAY,aAAa,EAA9B,CAA8B,CAAC;aAC/C,GAAG,CAAC,UAAA,KAAK,IAAI,OAAA,KAAsB,EAAtB,CAAsB,CAAC;aACpC,SAAS,CAAC,UAAA,KAAK;YAEd,IAAI,GAAG,GAAG,KAAK,CAAC,iBAAiB,GAAG,KAAK,CAAC,iBAAiB,GAAG,KAAK,CAAC,GAAG,CAAC;YACxE,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAC5C,CAAC;IAEO,+CAAiB,GAAzB,UAA0B,GAAa;QACrC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;IAC9C,CAAC;IAEO,4CAAc,GAAtB,UAAuB,GAAY;QACjC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;IACzD,CAAC;IACI,8BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,YAAY;oBACtB,WAAW,EAAE,6BAA6B;oBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;iBAC3C,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,kCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,iBAAiB,GAAG;QAC3B,EAAC,IAAI,EAAE,MAAM,GAAG;QAChB,EAAC,IAAI,EAAE,cAAc,GAAG;KACvB,EAJ6F,CAI7F,CAAC;IACF,0BAAC;CA1DD,AA0DC,IAAA;SA1DY,mBAAmB","file":"breadcrumb.component.js","sourceRoot":"","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {Router, NavigationEnd, ActivatedRoute} from \"@angular/router\";\nimport {BreadcrumbService, IBreadcrumb} from \"./breadcrumb.service\";\n\n\n\n\n\nexport class BreadcrumbComponent implements OnInit {\n\n  private ROUTE_DATA_BREADCRUMB: string = \"breadcrumb\";\n  public breadcrumbs: IBreadcrumb[];\n\n  /**\n   * @class DetailComponent\n   * @constructor\n   */\n  constructor(\n    private breadcrumbService : BreadcrumbService,\n    private router: Router,\n    private route: ActivatedRoute\n\n  ) {\n    this.breadcrumbs = [];\n  }\n\n  /**\n   * Let's go!\n   *\n   * @class DetailComponent\n   * @method ngOnInit\n   */\n  ngOnInit() {\n    //subscribe to the NavigationEnd event\n    this.router.events\n      .filter(event => event instanceof NavigationEnd)\n      .map(event => event as NavigationEnd)\n      .subscribe(event => {\n\n        let url = event.urlAfterRedirects ? event.urlAfterRedirects : event.url;\n        this.updateBreadcrumbs(url);\n      });\n\n    this.updateBreadcrumbs(location.pathname);\n  }\n\n  private updateBreadcrumbs(url :  string) : void {\n    this.breadcrumbs = this.getBreadcrumbs(url);\n  }\n\n  private getBreadcrumbs(url : string) : IBreadcrumb[] {\n    return this.breadcrumbService.generateBreadcrumbs(url);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  styleUrls: ['./breadcrumb.component.scss']\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BreadcrumbService, },\n{type: Router, },\n{type: ActivatedRoute, },\n];\n}\n\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}