{"version":3,"sources":["../../../../src/features/custom-http/custom-http.service.ts"],"names":[],"mappings":"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","file":"custom-http.service.js","sourceRoot":"","sourcesContent":["import {Injectable} from '@angular/core';\nimport {\n  Http, Response, RequestOptionsArgs, RequestOptions, Request, URLSearchParams,\n} from \"@angular/http\";\nimport {Observable} from \"rxjs\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {AuthConfig, AuthHttp} from \"angular2-jwt\";\nimport {Pageable, PageableUtil} from \"../../common/data/page\";\nimport {Filter, FilterUtil} from \"../../common/data/filter\";\n\n\n\n\n\nexport class CustomHttpService extends AuthHttp {\n\n  constructor(backend: Http,\n              options: RequestOptions,\n              authConfig: AuthConfig | null,\n              private translate: TranslateService) {\n\n    super(authConfig ? authConfig :  new AuthConfig(), backend, options);\n  }\n\n  /***************************************************************************\n   *                                                                         *\n   * Public API                                                              *\n   *                                                                         *\n   **************************************************************************/\n\n  request(request: string|Request, options?: RequestOptionsArgs): Observable<Response> {\n    if(request instanceof  Request){\n      return super.request(request as Request);\n    }else{\n      return super.request(request, this.handleOptions(options));\n    }\n  }\n\n\n  get(url: string, options?: RequestOptionsArgs, pageable? : Pageable, filters? : Filter[]): Observable<Response> {\n    return super.get(url, this.handleOptions(options, pageable, filters));\n  }\n\n  post(url: string, body: any, options?: RequestOptionsArgs): Observable<Response> {\n    return super.post(url, body, this.handleOptions(options));\n  }\n\n  put(url: string, body: any, options?: RequestOptionsArgs): Observable<Response> {\n    return super.put(url, body, this.handleOptions(options));\n  }\n\n  delete(url: string, options?: RequestOptionsArgs): Observable<Response> {\n    return super.delete(url, this.handleOptions(options));\n  }\n\n  patch(url: string, body: any, options?: RequestOptionsArgs): Observable<Response>{\n    return super.patch(url, body, this.handleOptions(options));\n  }\n\n  head(url: string, options?: RequestOptionsArgs): Observable<Response>{\n    return super.head(url, this.handleOptions(options));\n  }\n\n  options(url: string, options?: RequestOptionsArgs): Observable<Response>{\n    return super.options(url, this.handleOptions(options));\n  }\n\n\n\n  /***************************************************************************\n   *                                                                         *\n   * Private Methods                                                         *\n   *                                                                         *\n   **************************************************************************/\n\n\n  private handleOptions(options? : RequestOptionsArgs, pageable? : Pageable, filters? : Filter[]) : RequestOptionsArgs {\n\n    if(!options){\n      options = {} as RequestOptionsArgs;\n    }\n    if(pageable){\n      options = this.addPageable(options, pageable);\n    }\n    if(filters){\n      options = this.addFilters(options, filters);\n    }\n\n    options =  this.addLocale(options);\n\n    //console.log('injected options: ', options);\n\n    return options;\n  }\n\n\n  private addLocale(options: RequestOptionsArgs): RequestOptionsArgs {\n    let params: URLSearchParams;\n\n    if(options.params){\n      params = <URLSearchParams> options.params;\n    } else {\n      params = new URLSearchParams();\n    }\n\n    params.set('locale', this.translate.currentLang);\n    options.params = params;\n\n    return options;\n  }\n\n  private addPageable(options: RequestOptionsArgs, pageable : Pageable) : RequestOptionsArgs {\n    let params: URLSearchParams;\n\n    if(options.params){\n      params = <URLSearchParams> options.params;\n    } else {\n      params = new URLSearchParams();\n    }\n    options.params = PageableUtil.addSearchParams(params, pageable);\n    return options;\n  }\n\n  private addFilters(options: RequestOptionsArgs, filters : Filter[]) : RequestOptionsArgs {\n    let params: URLSearchParams;\n\n    if(options.params){\n      params = <URLSearchParams> options.params;\n    } else {\n      params = new URLSearchParams();\n    }\n    options.params = FilterUtil.addSearchParams(params, filters);\n    return options;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Http, },\n{type: RequestOptions, },\nnull,\n{type: TranslateService, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}