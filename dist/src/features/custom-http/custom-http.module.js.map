{"version":3,"sources":["../../../../src/features/custom-http/custom-http.module.ts"],"names":[],"mappings":"AACA,OAAO,EAAsB,QAAA,EAAS,MAAM,eAAA,CAAgB;AAC5D,OAAO,EAAA,iBAAE,EAAiB,MAAM,uBAAA,CAAwB;AACxD,OAAO,EAAA,YAAE,EAAY,MAAM,iBAAA,CAAkB;AAC7C,OAAO,EAAA,qBAAE,EAAsB,aAAA,EAAc,MAAM,yBAAA,CAA0B;AAC7E,OAAO,EAAA,gBAAE,EAAgB,MAAM,qBAAA,CAAsB;AACrD,OAAO,EAAA,IAAE,EAAK,cAAA,EAAe,MAAM,eAAA,CAAgB;AACnD,OAAO,EAAA,UAAE,EAAU,MAAM,cAAA,CAAe;AAGxC,cAAc,uBAAA,CAAA;AAId;IAAA;IAsBA,CAAC;IApBQ,wBAAO,GAAd;QACE,MAAM,CAAC;YACL,QAAQ,EAAE,gBAAgB;YAC1B,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,iBAAiB;oBAC1B,UAAU,EAAE,uBAAuB;oBACnC,IAAI,EAAE,CAAC,IAAI,EAAE,cAAc,EAAE,gBAAgB,EAAE,qBAAqB,CAAC;iBACtE;aACF;SACF,CAAA;IACH,CAAC;IACI,2BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;oBACvB,OAAO,EAAG,CAAE,YAAY,EAAE,aAAa,CAAE;iBAC1C,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,+BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,uBAAC;CAtBD,AAsBC,IAAA;SAtBY,gBAAgB;AAyB7B,yBAAyB;AACzB,MAAM,kCACF,OANS,EAOT,OANS,EAOT,SANW,EAOX,WANc;IAQd,IANI,aAAA,GAAgB;QAOhB,EAAE,CAAA,CAAC,WANC,CAAW,eAAC,EAAe,CAAE,CAAA,CAAC;YAO9B,MAAM,CANC,WAAA,CAAY,SAAC,GAAW,WAAA,CAAY,SAAC,CAAS,KAAC,GAAO,EAAA,CAAG;QAOpE,CAAC;QACD,MAAM,CANC,EAAA,CAAG;IAOd,CAAC,CANC;IAQF,MAAM,CANC,IAAI,iBAAA,CAOP,OAAO,EACP,OAAO,EACP,IANI,UAAA,CAAW;QAOX,SAAS,EANE,OAAA;QAOX,WAAW,EANE,aAAA;QAOb,UAAU,EANE,KAAA;QAOZ,aAAa,EANE,CAAA,EAAE,cAAC,EAAc,kBAAC,EAAkB,CAAC;KAOvD,CANC,EAOF,SAAS,CACZ,CANC;AAON,CAAC","file":"custom-http.module.js","sourceRoot":"","sourcesContent":["\nimport {ModuleWithProviders, NgModule} from \"@angular/core\";\nimport {CustomHttpService} from \"./custom-http.service\";\nimport {CommonModule} from \"@angular/common\";\nimport {AuthenticationService, JwtAuthModule} from \"@elderbyte/ngx-jwt-auth\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {Http, RequestOptions} from \"@angular/http\";\nimport {AuthConfig} from \"angular2-jwt\";\n\n\nexport * from \"./custom-http.service\"\n\n\n\nexport class CustomHttpModule {\n\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: CustomHttpModule,\n      providers: [\n        {\n          provide: CustomHttpService,\n          useFactory: createCustomHttpService,\n          deps: [Http, RequestOptions, TranslateService, AuthenticationService]\n        },\n      ]\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports : [ CommonModule, JwtAuthModule ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n\n//Because of AOT Compiler\nexport function createCustomHttpService(\n    backend: Http,\n    options: RequestOptions,\n    translate: TranslateService,\n    authService : AuthenticationService) {\n\n    let tokenGetterFn = () => {\n        if(authService.isAuthenticated()){\n            return authService.principal ? authService.principal.token : '';\n        }\n        return '';\n    };\n\n    return new CustomHttpService(\n        backend,\n        options,\n        new AuthConfig({\n            tokenName: 'token',\n            tokenGetter: tokenGetterFn,\n            noJwtError: false,\n            globalHeaders: [{'Content-Type':'application/json'}],\n        }),\n        translate\n    );\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}