{"version":3,"sources":["../../../../../src/features/side-content/side-content-toggle/side-content-toggle.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,SAAE,EAA4B,MAAM,eAAA,CAAgB;AAC3D,OAAO,EAAA,aAAE,EAAc,MAAA,EAAO,MAAM,iBAAA,CAAkB;AACtD,OAAO,EAAA,kBAAE,EAAkB,MAAM,yBAAA,CAA0B;AAI3D;IAME,oCACY,MAAc,EACd,kBAAsC;QADtC,WAAM,GAAN,MAAM,CAAQ;QACd,uBAAkB,GAAlB,kBAAkB,CAAoB;IAC9C,CAAC;IAEL,6CAAQ,GAAR;QAAA,iBAmBC;QAjBC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,KAAK;YAE1C,EAAE,CAAA,CAAC,KAAK,YAAY,aAAa,CAAC,CAAA,CAAC;gBAE/B,IAAI,MAAM,GAAG,KAAsB,CAAC;gBACpC,IAAI,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;gBACrB,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAE3B,IAAI,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gBAEpC,EAAE,CAAA,CAAC,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,GAAC,CAAC,CAAC,CAAA,CAAC;oBACrC,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBAC5B,CAAC;gBAAA,IAAI,CAAC,CAAC;oBACH,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBAC7B,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gDAAW,GAAX;QACE,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;IACzB,CAAC;IAGM,sDAAiB,GAAxB;QACI,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;IAC5C,CAAC;IAEM,2CAAM,GAAb;QACI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IACzC,CAAC;IAGI,qCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,yBAAyB;oBACnC,WAAW,EAAE,sCAAsC;oBACnD,SAAS,EAAE,CAAC,sCAAsC,CAAC;iBACpD,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,yCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,MAAM,GAAG;QAChB,EAAC,IAAI,EAAE,kBAAkB,GAAG;KAC3B,EAH6F,CAG7F,CAAC;IACF,iCAAC;CA1DD,AA0DC,IAAA;SA1DY,0BAA0B","file":"side-content-toggle.component.js","sourceRoot":"","sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {NavigationEnd, Router} from \"@angular/router\";\nimport {SideContentService} from \"../side-content.service\";\nimport {Subscription} from \"rxjs/Subscription\";\n\n\nexport class SideContentToggleComponent implements OnInit, OnDestroy {\n\n\n  private sub : Subscription;\n  public isMainRoute : boolean;\n\n  constructor(\n      private router: Router,\n      private sideContentService: SideContentService,\n  ) { }\n\n  ngOnInit() {\n\n    this.sub = this.router.events.subscribe((event) => {\n\n        if(event instanceof NavigationEnd){\n\n            let navEnd = event as NavigationEnd;\n            let url = navEnd.url;\n            let parts = url.split(\"/\");\n\n            let index = parts.indexOf(\"orders\");\n\n            if(index < 0 || index == parts.length-1){\n                this.isMainRoute = true;\n            }else {\n                this.isMainRoute = false;\n            }\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n\n\n  public toggleSideContent() {\n      this.sideContentService.toggleSidenav();\n  }\n\n  public goBack(){\n      this.router.navigate(['app/orders']);\n  }\n\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'app-side-content-toggle',\n  templateUrl: './side-content-toggle.component.html',\n  styleUrls: ['./side-content-toggle.component.scss']\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Router, },\n{type: SideContentService, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}