{"version":3,"sources":["../../../../src/features/global-search/global-search.service.ts"],"names":[],"mappings":"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","file":"global-search.service.js","sourceRoot":"","sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {Subject, Observable} from \"rxjs\";\nimport {NavigationEnd, Router} from \"@angular/router\";\nimport {BehaviorSubject} from \"rxjs/BehaviorSubject\";\nimport {Sort} from \"../../common/data/page\";\n\n\n\nexport class SortOption {\n  constructor(\n    public id : string,\n    public name : string\n  ){}\n}\n\n/**\n * Represents the search query which the user has configured\n */\nexport class SearchQuery {\n\n  public static Empty = new SearchQuery('', []);\n\n  constructor(\n    public keywords : string,\n    public sorts : Sort[]\n  ){}\n}\n\n\nexport class GlobalSearchService {\n\n  private _showGlobalSearch : boolean = false;\n  private _showGlobalSearchSubject = new Subject<boolean>();\n\n  private _query : SearchQuery;\n  private _querySubject = new Subject<SearchQuery>();\n  private _availableSorts = new BehaviorSubject<SortOption[]>([]);\n\n\n  constructor(router : Router) {\n\n     router.events\n      .filter(event => event instanceof NavigationEnd)\n      .map(() => router.routerState.root)\n      .map(route => {\n        while (route.firstChild) route = route.firstChild;\n        return route;\n      })\n      .filter(route => route.outlet === 'primary')\n      .mergeMap(route => route.data)\n      .subscribe(currentRouteData  => {\n\n        //console.log('NavigationEnd:', currentRouteData);\n        //console.log('show global search: ' + !!currentRouteData['showGlobalSearch']);\n\n        this.showGlobalSearch = !!currentRouteData['showGlobalSearch'];\n    });\n  }\n\n  get availableSortsObservable() : Observable<SortOption[]> {\n    return this._availableSorts;\n  }\n\n  public set availableSorts(sorts : SortOption[]){\n    this._availableSorts.next(sorts);\n  }\n\n  get queryObservable() : Observable<SearchQuery> {\n    return this._querySubject;\n  }\n\n  get query() : SearchQuery{\n    return this._query;\n  }\n\n  set query(value : SearchQuery){\n    this._query = value;\n    this._querySubject.next(value);\n  }\n\n  get showGlobalSearchObservable() : Observable<boolean> {\n    return this._showGlobalSearchSubject;\n  }\n\n  get showGlobalSearch(){\n    return this._showGlobalSearch;\n  }\n\n  set showGlobalSearch(value : boolean){\n    this._showGlobalSearch = value;\n    this._showGlobalSearchSubject.next(value);\n  }\n\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Router, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}